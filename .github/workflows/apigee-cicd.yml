name: Apigee X CI/CD Pipeline
  
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up JDK & Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Decode GCP Service Account Key
        run: echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > gcp-key.json

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Install Apigee CLI
        run: |
          curl -LO https://github.com/apigee/apigeecli/releases/download/v2.9.1/apigeecli_v2.9.1_Linux_x86_64.zip
          unzip apigeecli_v2.9.1_Linux_x86_64.zip
          chmod +x apigeecli_v2.9.1_Linux_x86_64/apigeecli
          sudo mv apigeecli_v2.9.1_Linux_x86_64/apigeecli /usr/local/bin/
          apigeecli -v

      - name: Static Code Analysis (Linting & Testing)
        run: bash scripts/static-analysis.sh

      - name: Deploy Apigee Proxy using Maven
        run: |
          mvn clean install \
            -Pdeploy \
            -Dapigee.org=${{ secrets.APIGEE_ORG }} \
            -Dapigee.env=${{ secrets.APIGEE_ENV }} \
            -Dapigee.bearer="${{ secrets.APIGEE_SA_KEY }}" \
            -Dapigee.config.options=update \
            -Dnvd.api.key=${{ secrets.NVD_API_KEY }}
        env:
          APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
          APIGEE_ENV: ${{ secrets.APIGEE_ENV }}
          APIGEE_SA_KEY: ${{ secrets.APIGEE_SA_KEY }}
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

      - name: Deploy Shared Flow using Maven
        run: |
          mvn clean install \
            -Pdeploy \
            -Dapigee.org=${{ secrets.APIGEE_ORG }} \
            -Dapigee.env=${{ secrets.APIGEE_ENV }}
        env:
          APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
          APIGEE_ENV: ${{ secrets.APIGEE_ENV }}

      - name: Deploy KVMs, Products, Target Servers
        run: bash scripts/deploy-configs.sh

      - name: Cleanup
        run: |
          rm -f gcp-key.json
          rm -rf ~/.m2/repository/io/apigee/build-tools/enterprise4g/

  rollback:
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Rollback Deployment
        run: bash scripts/rollback.sh
